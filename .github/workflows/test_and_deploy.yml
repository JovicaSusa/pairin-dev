name: Test and Deploy

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - main

env:
  RAILS_ENV: test

jobs:
  test:
    name: Test
    runs-on: ubuntu-20.04
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: password
        ports: ["5432:5432"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install system packages
        run: |
          sudo apt-get update -qq && sudo apt-get install libvips-dev
      - name: Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 20.4.0
      - name: Find yarn cache location
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: JS package cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install packages
        run: |
          yarn install --pure-lockfile
      - name: Setup test database
        run: |
          bin/rails db:setup
      - name: Precompilte assets
        run: bin/rails assets:precompile
      - name: Run tests
        run: bundle exec rspec
  deploy:
    name: Deploy
    runs-on: ubuntu-20.04
    needs: test
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    timeout-minutes: 20
    env:
      DOCKER_BUILDKIT: 1
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Setup SSH with a passphrase
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Deploy
        env:
          VERSION: ${{ github.sha }}
          KAMAL_REGISTRY_PASSWORD: ${{ secrets.KAMAL_REGISTRY_PASSWORD }}
          POSTGRES_URL: ${{ secrets.POSTGRES_URL }}
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
          MAILJET_API_KEY: ${{ secrets.MAILJET_API_KEY }}
          MAILJET_SECRET_KEY: ${{ secrets.MAILJET_SECRET_KEY }}
          MISSION_CONTROL_NAME: ${{ secrets.MISSION_CONTROL_NAME }}
          MISSION_CONTROL_PASSWORD: ${{ secrets.MISSION_CONTROL_PASSWORD }}
        run: bundle exec kamal deploy --version=$VERSION
